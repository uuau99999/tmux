#!/usr/bin/env bash

if [[ ! -f ~/.tmux-repo ]]; then
	echo "~/.tmux-repo file not found"
	exit 0
fi

if [[ ! -f ~/.tmux-repo.history ]]; then
	touch ~/.tmux-repo.history
fi

history_map=($(cat ~/.tmux-repo.history | awk '{print $1}'))

to_find_path=$(echo $(sed "s|~|$HOME|g" ~/.tmux-repo | tr -s '\n' ' '))

search_paths=$(find $to_find_path -mindepth 1 -maxdepth 2 -type d -exec [ -e '{}/.git' ] ';' -prune -print)

filtered_search_paths=()

for path in $search_paths; do
	if [[ ! " ${history_map[@]} " =~ " ${path} " ]]; then
		filtered_search_paths+=($path)
	fi
done

selected=$(
	{
		cat ~/.tmux-repo.history | sort -k 2 -r | awk '{print $1}'
		echo ${filtered_search_paths[@]} | tr ' ' '\n'
	} | fzf
)

if [[ -z $selected ]]; then
	exit 0
fi

if [[ ! -d $selected ]]; then
	echo "$selected not found"
	awk '{ if($1!=selected) print }' selected="$selected" ~/.tmux-repo.history >/tmp/new-tmux-repo.history
	echo "$(cat /tmp/new-tmux-repo.history)" >~/.tmux-repo.history
	exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
	tmux new-session -s $selected_name -c $selected
	exit 0
fi

if ! tmux has-session -t=$selected_name 2>/dev/null; then
	tmux new-session -ds $selected_name -c $selected
fi

tmux switch-client -t $selected_name

nowtime=$(date +%s)

if grep -q "$selected" ~/.tmux-repo.history; then
	awk '{ time=$2; if($1==selected) time=nowtime;  print $1,time}' selected="$selected" nowtime="$nowtime" ~/.tmux-repo.history >/tmp/new-tmux-repo.history
	echo "$(cat /tmp/new-tmux-repo.history)" >~/.tmux-repo.history
else
	echo "$selected $nowtime" >>~/.tmux-repo.history
fi
